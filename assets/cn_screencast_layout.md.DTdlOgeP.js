import{_ as a}from"./chunks/layout.Bydo3QlZ.js";import{_ as t,c as o,o as c,ag as r}from"./chunks/framework.3H72gWKR.js";const u=JSON.parse('{"title":"布局","description":"","frontmatter":{},"headers":[],"relativePath":"cn/screencast/layout.md","filePath":"cn/screencast/layout.md"}'),s={name:"cn/screencast/layout.md"};function n(d,e,l,i,_,p){return c(),o("div",null,e[0]||(e[0]=[r('<h1 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-label="Permalink to &quot;布局&quot;">​</a></h1><p>通过检视渲染的代码，可以发现每一个幻灯片是放在一个 <code>&lt;section&gt;</code> 元素中的，而且上面写死了一个样式 <code>display: flex</code>, 这里如果你对 CSS 比较熟悉，就意味着你可以基于 <code>flex</code> 实现灵活的布局。</p><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><p>这里我们提供一个简单的例子，也借助了来自 <code>TailwindCSS</code> 的内置样式。</p><video controls="controls" src="'+a+'"></video>',5)]))}const h=t(s,[["render",n]]);export{u as __pageData,h as default};
