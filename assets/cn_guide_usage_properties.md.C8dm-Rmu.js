import{_ as a}from"./chunks/demo.BHqmSc3-.js";import{_ as t,c as s,o as e,a5 as n}from"./chunks/framework.B-2EAuIc.js";const k=JSON.parse('{"title":"区块属性","description":"","frontmatter":{},"headers":[],"relativePath":"cn/guide/usage/properties.md","filePath":"cn/guide/usage/properties.md"}'),d={name:"cn/guide/usage/properties.md"},p=n(`<h1 id="区块属性" tabindex="-1">区块属性 <a class="header-anchor" href="#区块属性" aria-label="Permalink to &quot;区块属性&quot;">​</a></h1><p>区块属性是 Logseq 里的重要组成部分。Slide Reveal 插件也大量的使用了这个概念来定制幻灯片。支持的各类属性比较多，不同的属性的作用目标和范围也是不一样的。下面我们来分类一一介绍。</p><p>大家可以看到下面的属性有的是有值的，有的是 Bool 类型的，如果没有值需要写成 <code>true</code>，代表应用这个属性。</p><h2 id="设置主题" tabindex="-1">设置主题 <a class="header-anchor" href="#设置主题" aria-label="Permalink to &quot;设置主题&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data-theme:: black</span></span></code></pre></div><p>支持如下可选主题：</p><ul><li>black</li><li>moon</li><li>white</li><li>night</li><li>league</li><li>beige</li><li>serif</li><li>simple</li><li>dracula</li><li>sky</li><li>blood</li><li>solarized</li></ul><p>我们可以在插件设置里设置主题，但是用属性来设置的优先级更高。并且只作用于单页，当翻到下一页时主题会恢复到插件设置的主题。如果插件设置的主题是 <code>inherit</code> ，表示继承前一个主题，则会保持应用上一页属性设置的主题。</p><h2 id="设置过渡效果" tabindex="-1">设置过渡效果 <a class="header-anchor" href="#设置过渡效果" aria-label="Permalink to &quot;设置过渡效果&quot;">​</a></h2><p>过渡效果就是翻页时的动画效果。分为页面主体文字和背景两部分分别控制。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data-transition:: slide</span></span>
<span class="line"><span>data-background-transition:: slide</span></span></code></pre></div><p>可选值如下：</p><ul><li>none</li><li>fade</li><li>slide</li><li>convex</li><li>concave</li><li>zoom</li></ul><h2 id="设置列表" tabindex="-1">设置列表 <a class="header-anchor" href="#设置列表" aria-label="Permalink to &quot;设置列表&quot;">​</a></h2><p>这个不同于基于 Markdown 实现的列表，虽然视觉上差不多。</p><h3 id="无序列表" tabindex="-1">无序列表 <a class="header-anchor" href="#无序列表" aria-label="Permalink to &quot;无序列表&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- ## List</span></span>
<span class="line"><span>  data-list:: true</span></span>
<span class="line"><span>	- Topic 1</span></span>
<span class="line"><span>	- Topic 2</span></span>
<span class="line"><span>	- Topic 3</span></span>
<span class="line"><span>	- Topic 4</span></span></code></pre></div><h3 id="有序列表" tabindex="-1">有序列表 <a class="header-anchor" href="#有序列表" aria-label="Permalink to &quot;有序列表&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- ## Ordered List</span></span>
<span class="line"><span>  data-ordered-list:: true</span></span>
<span class="line"><span>	- Topic 1</span></span>
<span class="line"><span>	- Topic 2</span></span>
<span class="line"><span>	- Topic 3</span></span>
<span class="line"><span>	- Topic 4</span></span></code></pre></div><h3 id="双栏布局" tabindex="-1">双栏布局 <a class="header-anchor" href="#双栏布局" aria-label="Permalink to &quot;双栏布局&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Two Column List</span></span>
<span class="line"><span>  data-two-column:: true</span></span>
<span class="line"><span>	- Item 1</span></span>
<span class="line"><span>	- Item 2</span></span>
<span class="line"><span>	- Item 3</span></span>
<span class="line"><span>	- Item 4</span></span>
<span class="line"><span>	- Item 5</span></span>
<span class="line"><span>	- Item 6</span></span>
<span class="line"><span>	- Item 7</span></span>
<span class="line"><span>	- Item 8</span></span></code></pre></div><p>这个属性也可以配合其他属性一起使用。</p><h2 id="设置-id" tabindex="-1">设置 ID <a class="header-anchor" href="#设置-id" aria-label="Permalink to &quot;设置 ID&quot;">​</a></h2><p>设置 ID 的主要目的是为了实现跳转。还有一个用途是在动画效果中标识不同幻灯片里的相同元素。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- ## Slide Link To</span></span>
<span class="line"><span>  data-id:: aa</span></span>
<span class="line"><span>	- I&#39;am aa, let&#39;s go to cc</span></span>
<span class="line"><span>	- [Go to cc](#/cc)</span></span>
<span class="line"><span>- ## Slide Link Back</span></span>
<span class="line"><span>  data-id:: cc</span></span>
<span class="line"><span>	- I&#39;am cc, let&#39;s go back to aa</span></span>
<span class="line"><span>	- [Go back to aa](#/aa)</span></span></code></pre></div><h2 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h2><p>动画是一个比较复杂的概念，这里只介绍最常用的一种。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- ## Auto Animation</span></span>
<span class="line"><span>  data-auto-animate:: true</span></span>
<span class="line"><span>	- ## A</span></span>
<span class="line"><span>	- ## B</span></span>
<span class="line"><span>	  collapsed:: true</span></span>
<span class="line"><span>	- ## C</span></span>
<span class="line"><span>	  collapsed:: true</span></span>
<span class="line"><span>	- ## D</span></span>
<span class="line"><span>- ## Auto Animation</span></span>
<span class="line"><span>  data-auto-animate:: true</span></span>
<span class="line"><span>	- ## B</span></span>
<span class="line"><span>	- ## D</span></span>
<span class="line"><span>	- ## A</span></span>
<span class="line"><span>	- ## C</span></span></code></pre></div><p>一些其他属性也可以配合使用。</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>data-auto-animate-easing</td><td>ease</td><td>一个 CSS <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function" target="_blank" rel="noreferrer">缓动函数</a>。</td></tr><tr><td>data-auto-animate-unmatched</td><td>true</td><td>决定没有匹配的自动动画目标的元素是否应该淡入。设置为 false 使它们立即出现。</td></tr><tr><td>data-auto-animate-duration</td><td>1.0</td><td>动画持续时间，以秒为单位。</td></tr><tr><td>data-auto-animate-delay</td><td>0</td><td>动画延迟时间，以秒为单位（只能针对特定元素设置，不能在幻灯片级别设置）。</td></tr><tr><td>data-auto-animate-id</td><td>无</td><td>连接自动动画幻灯片的 <a href="https://revealjs.com/auto-animate/#auto-animate-id-%26-restart" target="_blank" rel="noreferrer">id</a>。</td></tr><tr><td>data-auto-animate-restart</td><td>无</td><td><a href="https://revealjs.com/auto-animate/#auto-animate-id-%26-restart" target="_blank" rel="noreferrer">分离</a> 两个相邻的自动动画幻灯片（即使它们有相同的 id）。</td></tr></tbody></table><p>更详细的介绍可以参考 Reveal.js 的<a href="https://revealjs.com/auto-animate/" target="_blank" rel="noreferrer">官方文档</a>。</p><h2 id="垂直幻灯片" tabindex="-1">垂直幻灯片 <a class="header-anchor" href="#垂直幻灯片" aria-label="Permalink to &quot;垂直幻灯片&quot;">​</a></h2><p>垂直幻灯片是 Reveal.js 的一个核心功能，在插件里也支持。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- Slide 2, \`Vertical Mode will not render this block\`</span></span>
<span class="line"><span>  data-vertical:: true</span></span>
<span class="line"><span>	- Vertical 1</span></span>
<span class="line"><span>		- a</span></span>
<span class="line"><span>		- b</span></span>
<span class="line"><span>		- c</span></span>
<span class="line"><span>	- Vertical 2</span></span>
<span class="line"><span>		- d</span></span>
<span class="line"><span>		- e</span></span>
<span class="line"><span>		- f</span></span></code></pre></div><p>可以配合其他水平幻灯片一起构成网格式幻灯片。</p><h2 id="设置背景" tabindex="-1">设置背景 <a class="header-anchor" href="#设置背景" aria-label="Permalink to &quot;设置背景&quot;">​</a></h2><p>设置背景是一大类，下面分别介绍</p><h3 id="纯色背景" tabindex="-1">纯色背景 <a class="header-anchor" href="#纯色背景" aria-label="Permalink to &quot;纯色背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Colorful Background</span></span>
<span class="line"><span>  data-background-color:: aquamarine</span></span></code></pre></div><p>这里的颜色名称可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/named-color" target="_blank" rel="noreferrer">这个文档</a>。如果你了解前端技术，这里也可以写其他格式的合法颜色，比如 <code>#fff</code>，<code>rgb(255, 255, 255)</code>，<code>rgba(255, 255, 255, 0.5)</code> 等。</p><h3 id="渐变背景" tabindex="-1">渐变背景 <a class="header-anchor" href="#渐变背景" aria-label="Permalink to &quot;渐变背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Gradient Background</span></span>
<span class="line"><span>  data-background-gradient:: linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%), linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%), linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)</span></span></code></pre></div><p>这里的渐变规则可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/linear-gradient" target="_blank" rel="noreferrer">这个文档</a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/radial-gradient" target="_blank" rel="noreferrer">这个文档</a>。</p><h3 id="图片背景" tabindex="-1">图片背景 <a class="header-anchor" href="#图片背景" aria-label="Permalink to &quot;图片背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Image Background</span></span>
<span class="line"><span>  data-background-image:: https://source.unsplash.com/random?1</span></span>
<span class="line"><span>  data-background-opacity:: 0.5</span></span></code></pre></div><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>data-background-image</td><td></td><td>要显示的图片的 URL，支持远程图片和本地图片。GIF 在幻灯片打开时重新开始播放。</td></tr><tr><td>data-background-size</td><td>cover</td><td>参见 MDN 上的 <a href="https://developer.mozilla.org/docs/Web/CSS/background-size" target="_blank" rel="noreferrer">background-size</a>。</td></tr><tr><td>data-background-position</td><td>center</td><td>参见 MDN 上的 <a href="https://developer.mozilla.org/docs/Web/CSS/background-position" target="_blank" rel="noreferrer">background-position</a>。</td></tr><tr><td>data-background-repeat</td><td>no-repeat</td><td>参见 MDN 上的 <a href="https://developer.mozilla.org/docs/Web/CSS/background-repeat" target="_blank" rel="noreferrer">background-repeat</a>。</td></tr><tr><td>data-background-opacity</td><td>1</td><td>背景图片的不透明度，范围从 0 到 1。0 表示完全透明，1 表示完全不透明。</td></tr></tbody></table><h3 id="半图背景" tabindex="-1">半图背景 <a class="header-anchor" href="#半图背景" aria-label="Permalink to &quot;半图背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- ## Half background to right</span></span>
<span class="line"><span>  data-list:: true</span></span>
<span class="line"><span>  data-half-background-to:: right</span></span>
<span class="line"><span>  data-half-background-image:: https://source.unsplash.com/random?2</span></span>
<span class="line"><span>	- ### I&#39;m on the left</span></span>
<span class="line"><span>	- ### I&#39;m on the left</span></span>
<span class="line"><span>	  collapsed:: true</span></span>
<span class="line"><span>	- ### I&#39;m on the left</span></span></code></pre></div><p>也支持图片方左边，文字放右边。</p><h3 id="视频背景" tabindex="-1">视频背景 <a class="header-anchor" href="#视频背景" aria-label="Permalink to &quot;视频背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Remote Video Background</span></span>
<span class="line"><span>  data-background-video:: \`https://static.slid.es/site/homepage/v1/homepage-video-editor.mp4\`</span></span>
<span class="line"><span>  data-background-video-loop:: true</span></span>
<span class="line"><span>  data-background-video-muted:: true</span></span>
<span class="line"><span>  data-background-opacity:: 0.5</span></span></code></pre></div><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>data-background-video</td><td></td><td>视频地址表。</td></tr><tr><td>data-background-video-loop</td><td>false</td><td>如果视频应该循环播放，则标记。</td></tr><tr><td>data-background-video-muted</td><td>false</td><td>如果音频应该静音，则标记。</td></tr><tr><td>data-background-size</td><td>cover</td><td>使用 <code>cover</code> 以全屏显示并进行适当裁剪，或者使用 <code>contain</code> 以适应屏幕而不裁剪。</td></tr><tr><td>data-background-opacity</td><td>1</td><td>背景视频的不透明度，范围从 0 到 1。0 表示完全透明，1 表示完全不透明。</td></tr></tbody></table><h3 id="iframe-背景" tabindex="-1">iframe 背景 <a class="header-anchor" href="#iframe-背景" aria-label="Permalink to &quot;iframe 背景&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- # Youtube Background</span></span>
<span class="line"><span>  data-background-iframe:: https://www.youtube.com/embed/anmuklFtu8U?si=j9wRINS3buG3ZN2n</span></span>
<span class="line"><span>  data-background-interactive:: true</span></span>
<span class="line"><span>  data-preload:: true</span></span>
<span class="line"><span>  data-background-opacity:: 0.5</span></span></code></pre></div><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>data-background-iframe</td><td></td><td>加载 iframe 的 URL</td></tr><tr><td>data-background-interactive</td><td>false</td><td>包含此属性以使与 iframe 内容交互成为可能。启用此选项将阻止与幻灯片内容的交互。</td></tr><tr><td>data-preload</td><td>false</td><td>预先加载 iframe</td></tr></tbody></table><h2 id="设置样式" tabindex="-1">设置样式 <a class="header-anchor" href="#设置样式" aria-label="Permalink to &quot;设置样式&quot;">​</a></h2><h3 id="基于-css" tabindex="-1">基于 CSS <a class="header-anchor" href="#基于-css" aria-label="Permalink to &quot;基于 CSS&quot;">​</a></h3><p>这里需要熟悉 CSS 样式的语法。支持如下几种属性，作用和范围不同</p><ul><li><code>data-style</code>，只作用于当前区块。</li><li><code>data-child-style</code>，作用于当前区块的所有下级子区块。</li><li><code>data-section-style</code>，作用于当前幻灯片最外层标签。</li><li><code>data-list-style</code>，作用于列表标签，配合 <code>data-list</code> 使用。</li></ul><h3 id="基于-tailwind-css" tabindex="-1">基于 <code>Tailwind CSS</code> <a class="header-anchor" href="#基于-tailwind-css" aria-label="Permalink to &quot;基于 \`Tailwind CSS\`&quot;">​</a></h3><p>插件内置了大量的 <code>Tailwind CSS</code> 样式，所以需要支持设置 CSS 类名。</p><ul><li><code>data-class</code>，只作用于当前区块。</li><li><code>data-child-class</code>，作用于当前区块的所有下级子区块。</li><li><code>data-section-class</code>，作用于当前幻灯片最外层标签。</li><li><code>data-list-class</code>，作用于列表标签，配合 <code>data-list</code> 使用。</li></ul><p>这里要注意所有的 <code>Tailwind CSS</code> 类名都是以 <code>!</code> 开头的，为了提高样式的优先级。</p><h2 id="公共头尾" tabindex="-1">公共头尾 <a class="header-anchor" href="#公共头尾" aria-label="Permalink to &quot;公共头尾&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data-header:: true</span></span></code></pre></div><p>或</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data-footer:: true</span></span></code></pre></div><p>标识为公共头尾的区块不会被当作当前幻灯片的内容，而是每一页幻灯片都会显示。为了满足需要还需要配合其他属性进行定位和美化。</p><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>- Slide Reveal Demo</span></span>
<span class="line"><span>  data-header:: true</span></span>
<span class="line"><span>  data-class:: !absolute !top-0 !left-0 !text-left !p-8 !font-bold  !text-2xl !bg-gradient-to-r !from-rose-400 !via-fuchsia-500 !to-indigo-500 !text-transparent  !bg-clip-text !w-auto</span></span>
<span class="line"><span>- Name@Company</span></span>
<span class="line"><span>  data-footer:: true</span></span>
<span class="line"><span>  data-class:: !absolute !bottom-8 !text-center !p-2 !w-full !text-xl !text-gray-500</span></span>
<span class="line"><span>- # Slide 1</span></span></code></pre></div><p>将被渲染成</p><p><img src="`+a+'" alt=""></p><h2 id="分段" tabindex="-1">分段 <a class="header-anchor" href="#分段" aria-label="Permalink to &quot;分段&quot;">​</a></h2><p>分段让一页幻灯片可以分成多段，每段可以依次显示出来。通过属性设置可以实现一些变化。</p><ul><li><code>data-fragment</code> 设置当前区块的分段效果。</li><li><code>data-child-fragment</code> 设置当前区块的所有下级子区块的分段效果。</li><li><code>data-fragment-index</code> 设置当前区块的分段索引。</li></ul><p>分段效果可以有如下选择</p><table><thead><tr><th>名称</th><th>效果</th></tr></thead><tbody><tr><td>fade-out</td><td>开始可见，然后淡出</td></tr><tr><td>fade-up</td><td>向上滑动同时淡入</td></tr><tr><td>fade-down</td><td>向下滑动同时淡入</td></tr><tr><td>fade-left</td><td>向左滑动同时淡入</td></tr><tr><td>fade-right</td><td>向右滑动同时淡入</td></tr><tr><td>fade-in-then-out</td><td>先淡入，然后在下一个步骤淡出</td></tr><tr><td>current-visible</td><td>淡入，然后在下一个步骤淡出</td></tr><tr><td>fade-in-then-semi-out</td><td>淡入，然后在下一个步骤变为半透明</td></tr><tr><td>grow</td><td>放大</td></tr><tr><td>semi-fade-out</td><td>淡出至 50% 的透明度</td></tr><tr><td>shrink</td><td>缩小</td></tr><tr><td>strike</td><td>删除线</td></tr><tr><td>highlight-red</td><td>文本变为红色</td></tr><tr><td>highlight-green</td><td>文本变为绿色</td></tr><tr><td>highlight-blue</td><td>文本变为蓝色</td></tr><tr><td>highlight-current-red</td><td>文本变为红色，然后在下一个步骤恢复原色</td></tr><tr><td>highlight-current-green</td><td>文本变为绿色，然后在下一个步骤恢复原色</td></tr><tr><td>highlight-current-blue</td><td>文本变为蓝色，然后在下一个步骤恢复原色</td></tr></tbody></table><h2 id="隐藏幻灯片" tabindex="-1">隐藏幻灯片 <a class="header-anchor" href="#隐藏幻灯片" aria-label="Permalink to &quot;隐藏幻灯片&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>data-visibility:: hidden</span></span></code></pre></div><p>标识了这个属性的幻灯片不会被渲染</p>',80),l=[p];function i(o,r,c,h,u,g){return e(),s("div",null,l)}const v=t(d,[["render",i]]);export{k as __pageData,v as default};
