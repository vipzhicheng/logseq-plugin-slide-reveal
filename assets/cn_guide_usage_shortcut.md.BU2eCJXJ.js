import{_ as e,c as a,o,a5 as l}from"./chunks/framework.B-2EAuIc.js";const b=JSON.parse('{"title":"快捷键","description":"","frontmatter":{},"headers":[],"relativePath":"cn/guide/usage/shortcut.md","filePath":"cn/guide/usage/shortcut.md"}'),i={name:"cn/guide/usage/shortcut.md"},d=l(`<h1 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h1><p>插件支持一些快捷键，用于在播放幻灯片时获得更好的体验。</p><h2 id="翻页" tabindex="-1">翻页 <a class="header-anchor" href="#翻页" aria-label="Permalink to &quot;翻页&quot;">​</a></h2><ul><li><code>j</code>, <code>k</code>, <code>h</code>, <code>l</code> : 上下左右翻页，类似 <code>Vim</code>。</li><li>键盘上下左右键：作用同上。</li><li>空格键：下一页</li><li><code>n</code>, <code>p</code>: 下一页，上一页</li></ul><h2 id="缩放" tabindex="-1">缩放 <a class="header-anchor" href="#缩放" aria-label="Permalink to &quot;缩放&quot;">​</a></h2><p>按住 <code>alt</code> 键，鼠标点击要放大的区域，会局部放大幻灯片，再次点击恢复原始大小。</p><h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><p>按 <code>ESC</code> 进入概览模式，再按 <code>ESC</code> 退出概览。</p><h2 id="暂停" tabindex="-1">暂停 <a class="header-anchor" href="#暂停" aria-label="Permalink to &quot;暂停&quot;">​</a></h2><ul><li><code>b</code>: 黑屏暂停，再按恢复。</li></ul><h2 id="画图模式" tabindex="-1">画图模式 <a class="header-anchor" href="#画图模式" aria-label="Permalink to &quot;画图模式&quot;">​</a></h2><ul><li><code>t</code>: 画图模式，再按退出画图模式</li><li><code>d</code>: 切换选择模式，画图模式不退出，但是也不能继续画</li><li><code>1</code>~<code>9</code>: 画图模式下，选择颜色</li><li><code>ctrl+z</code>: 撤销</li></ul><h2 id="退出" tabindex="-1">退出 <a class="header-anchor" href="#退出" aria-label="Permalink to &quot;退出&quot;">​</a></h2><p><code>q</code>: 退出幻灯片。</p><h2 id="启动幻灯片" tabindex="-1">启动幻灯片 <a class="header-anchor" href="#启动幻灯片" aria-label="Permalink to &quot;启动幻灯片&quot;">​</a></h2><p>为了不与其他插件的快捷键冲突，默认没有绑定任何快捷键，但是你可以编辑配置文件，绑定一个快捷键。</p><p><code>logseq-slide-reveal.json</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;keyBindings&quot;: {</span></span>
<span class="line"><span>    &quot;openSlideReveal&quot;: &quot;mod+shift+l&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="其他启动方式" tabindex="-1">其他启动方式 <a class="header-anchor" href="#其他启动方式" aria-label="Permalink to &quot;其他启动方式&quot;">​</a></h3><ul><li>页面右上角图标启动。</li><li>命令搜索框输入 <code>Slide Reveal</code> 启动。</li></ul><h3 id="启动局部幻灯片" tabindex="-1">启动局部幻灯片 <a class="header-anchor" href="#启动局部幻灯片" aria-label="Permalink to &quot;启动局部幻灯片&quot;">​</a></h3><ul><li>在区块中输入 <code>/Slide Reveal</code> 启动局部幻灯片。</li><li>在区块的上下文菜单中选择 <code>Slide Reveal</code> 启动局部幻灯片。</li></ul><h3 id="预览幻灯片" tabindex="-1">预览幻灯片 <a class="header-anchor" href="#预览幻灯片" aria-label="Permalink to &quot;预览幻灯片&quot;">​</a></h3><ul><li>在区块中输入 <code>/Slide Preview</code> 预览幻灯片。</li><li>在区块的上下文菜单中选择 <code>Slide Preview</code> 预览幻灯片。</li></ul>`,24),c=[d];function t(s,n,r,h,u,p){return o(),a("div",null,c)}const _=e(i,[["render",t]]);export{b as __pageData,_ as default};
