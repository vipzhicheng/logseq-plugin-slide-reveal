import{_ as t}from"./chunks/theme.sokiFj3h.js";import{_ as a,c as r,o,ag as s}from"./chunks/framework.3H72gWKR.js";const f=JSON.parse('{"title":"主题","description":"","frontmatter":{},"headers":[],"relativePath":"cn/screencast/theme.md","filePath":"cn/screencast/theme.md"}'),c={name:"cn/screencast/theme.md"};function n(_,e,i,d,l,m){return o(),r("div",null,e[0]||(e[0]=[s('<h1 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h1><p>插件支持主题配置，并且除了具体的主题名之外，还支持选择随机主题，单页随机主题和继承主题。配合在文档中使用 <code>data-theme</code> 属性，可以轻松实现更灵活的主题切换。</p><h2 id="演示" tabindex="-1">演示 <a class="header-anchor" href="#演示" aria-label="Permalink to &quot;演示&quot;">​</a></h2><video controls="controls" src="'+t+'"></video>',4)]))}const u=a(c,[["render",n]]);export{f as __pageData,u as default};
